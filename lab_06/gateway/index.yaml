---
openapi: "3.1.0"
info: 
  title: "FastAPI"
  version: "0.1.0"
paths: 
  /auth/: 
    post: 
      summary: "Auth"
      operationId: "auth_auth__post"
      parameters: 
      - name: "username"
        in: "query"
        required: "true"
        schema: 
          type: "string"
          title: "Username"
      - name: "password"
        in: "query"
        required: "true"
        schema: 
          type: "string"
          title: "Password"
      responses: 
        200: 
          description: "Successful Response"
          content: 
            application/json: 
              schema: 
        422: 
          description: "Validation Error"
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/HTTPValidationError"
  /users/{user_id}: 
    get: 
      summary: "Get User"
      operationId: "get_user_users__user_id__get"
      parameters: 
      - name: "user_id"
        in: "path"
        required: "true"
        schema: 
          type: "integer"
          title: "User Id"
      - name: "token"
        in: "query"
        required: "true"
        schema: 
          type: "string"
          title: "Token"
      responses: 
        200: 
          description: "Successful Response"
          content: 
            application/json: 
              schema: 
        422: 
          description: "Validation Error"
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/HTTPValidationError"
  /deliveries/{delivery_id}: 
    get: 
      summary: "Get Delivery"
      operationId: "get_delivery_deliveries__delivery_id__get"
      parameters: 
      - name: "delivery_id"
        in: "path"
        required: "true"
        schema: 
          type: "string"
          title: "Delivery Id"
      - name: "token"
        in: "query"
        required: "true"
        schema: 
          type: "string"
          title: "Token"
      responses: 
        200: 
          description: "Successful Response"
          content: 
            application/json: 
              schema: 
        422: 
          description: "Validation Error"
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/HTTPValidationError"
  /parcels/{parcel_id}: 
    get: 
      summary: "Get Parcel"
      operationId: "get_parcel_parcels__parcel_id__get"
      parameters: 
      - name: "parcel_id"
        in: "path"
        required: "true"
        schema: 
          type: "string"
          title: "Parcel Id"
      - name: "token"
        in: "query"
        required: "true"
        schema: 
          type: "string"
          title: "Token"
      responses: 
        200: 
          description: "Successful Response"
          content: 
            application/json: 
              schema: 
        422: 
          description: "Validation Error"
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/HTTPValidationError"
  /parcels/: 
    post: 
      summary: "Create Parcel"
      operationId: "create_parcel_parcels__post"
      parameters: 
      - name: "token"
        in: "query"
        required: "true"
        schema: 
          type: "string"
          title: "Token"
      requestBody: 
        required: "true"
        content: 
          application/json: 
            schema: 
              $ref: "#/components/schemas/Parcel"
      responses: 
        200: 
          description: "Successful Response"
          content: 
            application/json: 
              schema: 
        422: 
          description: "Validation Error"
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/HTTPValidationError"
    get: 
      summary: "Get All Parcels"
      operationId: "get_all_parcels_parcels__get"
      parameters: 
      - name: "token"
        in: "query"
        required: "true"
        schema: 
          type: "string"
          title: "Token"
      responses: 
        200: 
          description: "Successful Response"
          content: 
            application/json: 
              schema: 
        422: 
          description: "Validation Error"
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/HTTPValidationError"
  /deliveries/: 
    post: 
      summary: "Create Delivery"
      operationId: "create_delivery_deliveries__post"
      parameters: 
      - name: "token"
        in: "query"
        required: "true"
        schema: 
          type: "string"
          title: "Token"
      requestBody: 
        required: "true"
        content: 
          application/json: 
            schema: 
              $ref: "#/components/schemas/Delivery"
      responses: 
        200: 
          description: "Successful Response"
          content: 
            application/json: 
              schema: 
        422: 
          description: "Validation Error"
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/HTTPValidationError"
    get: 
      summary: "Get All Deliveries"
      operationId: "get_all_deliveries_deliveries__get"
      parameters: 
      - name: "token"
        in: "query"
        required: "true"
        schema: 
          type: "string"
          title: "Token"
      responses: 
        200: 
          description: "Successful Response"
          content: 
            application/json: 
              schema: 
        422: 
          description: "Validation Error"
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/HTTPValidationError"
components: 
  schemas: 
    Delivery: 
      properties: 
        sender_id: 
          type: "integer"
          title: "Sender Id"
        receiver_id: 
          type: "integer"
          title: "Receiver Id"
        status: 
          type: "string"
          title: "Status"
        date: 
          type: "string"
          format: "date-time"
          title: "Date"
      type: "object"
      required: 
      - "sender_id"
      - "receiver_id"
      - "status"
      title: "Delivery"
    HTTPValidationError: 
      properties: 
        detail: 
          items: 
            $ref: "#/components/schemas/ValidationError"
          type: "array"
          title: "Detail"
      type: "object"
      title: "HTTPValidationError"
    Parcel: 
      properties: 
        sender_id: 
          type: "integer"
          title: "Sender Id"
        receiver_id: 
          type: "integer"
          title: "Receiver Id"
        delivery_id: 
          anyOf: 
          - type: "string"
          - type: "null"
          title: "Delivery Id"
          default: ""
        status: 
          type: "string"
          title: "Status"
        shipment_method: 
          anyOf: 
          - type: "string"
          - type: "null"
          title: "Shipment Method"
          default: "unknown"
      type: "object"
      required: 
      - "sender_id"
      - "receiver_id"
      - "status"
      title: "Parcel"
    ValidationError: 
      properties: 
        loc: 
          items: 
            anyOf: 
            - type: "string"
            - type: "integer"
          type: "array"
          title: "Location"
        msg: 
          type: "string"
          title: "Message"
        type: 
          type: "string"
          title: "Error Type"
      type: "object"
      required: 
      - "loc"
      - "msg"
      - "type"
      title: "ValidationError"